/*Servlet request
 * 
 * https://www.cnblogs.com/zhixiang-org-cn/p/11938932.html
 * 
 */
 /**
 spring-cloud-sleuth  spring.factories TraceWebServletAutoConfiguration类：
 **/
 //拦截器
 
  @Bean
	@ConditionalOnMissingBean
	public TracingFilter tracingFilter(HttpTracing tracing) {
		return (TracingFilter) TracingFilter.create(tracing);
	}
  
  //Span的创建
  /***
  *
  *
  ***/
  
 public <C> Span handleReceive(TraceContext.Extractor<C> extractor, C carrier, Req request) {
    Span span = nextSpan(extractor.extract(carrier), request);
    //当前环境中是否存在span，如果存在则加入当前环境的span，否则继续进入创建span的逻辑.
    span.kind(Span.Kind.SERVER);
    return handleStart(request, span);
  }
  Span nextSpan(TraceContextOrSamplingFlags extracted, Req request) {
    if (extracted.sampled() == null) { // Otherwise, try to make a new decision
      extracted = extracted.sampled(sampler.trySample(adapter, request));
    }
    return extracted.context() != null
        ? tracer.joinSpan(extracted.context())
        : tracer.nextSpan(extracted);
  }
